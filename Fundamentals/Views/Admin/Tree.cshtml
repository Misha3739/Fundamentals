@model List<Fundamentals.Models.Admin.UserInRolesViewModel>

@{
    ViewBag.Title = "Admin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/custom-bootstrap-tree.css")
@Styles.Render("~/Content/AdminTree.css")



<div class="panel panel-primary">
    <div id="frm-author" class="panel-body">
        @using (Html.BeginForm("Save","Admin",FormMethod.Post,Model))
        {

            <div class="tree">
                @for (int i = 0; i < Model.Count; i++)
                {

                    <ul>
                        <li class="li-parent">
                            <a href="#">
                                @Html.HiddenFor(model => model[i].UserId)
                                @Html.HiddenFor(model => model[i].IsDirty,new {id="IsDirty_"+Model[i].UserId, @class= "input-dirty-parent" })
                                @Html.HiddenFor(model => model[i].UserName)
                                @Html.HiddenFor(model => model[i].RoleApproved,new { @class = "user-admin-approved" })
                                @*@Html.CheckBoxFor(model => model[i].IsDirty, new { @class = "tree-checkbox parent",@readonly="true", @id = @Model[i].UserId })*@

                                <label for=@i>
                                    @Html.DisplayFor(model => model[i].UserName)

                                </label>
                            </a>
                            <ul>
                                @for (int j = 0; j < Model[i].Roles.Count; j++)
                                {
                                    int k = 1 + j;
                                    
                                    <li class="li-child">
                                        @Html.HiddenFor(model => model[i].Roles[j].Id)
                                        @Html.HiddenFor(model => model[i].Roles[j].UserId)
                                        @Html.HiddenFor(model => model[i].Roles[j].IsAssigned,new {@class= "input-assigned-child" })
                                        @Html.HiddenFor(model => model[i].Roles[j].IsDirty, new {@class= "input-dirty-child" })
                                        @Html.HiddenFor(model => model[i].Roles[j].Name)
                                        <a href="#">
                                            @Html.CheckBoxFor(model => model[i].Roles[j].IsChecked, new {@class = "tree-checkbox node-item", @iid = i + "" + j})

                                            <label for=@i@j>
                                                @Html.DisplayFor(model => model[i].Roles[j].Name)
                                            </label>
                                        </a>
                                    </li>

                                }

                            </ul>
                        </li>
                    </ul>
                }

            </div>
            <div class="form-group">
                <div class="col-lg-9"></div>
                <div class="col-lg-3">
                    <button class="btn btn-success" id="btnSubmit" type="submit">
                        Submit
                    </button>
                </div>
            </div>
        }

    </div>
</div>


@Scripts.Render("~/Scripts/AdminTree.js")


    